[
    {
        "type": "function",
        "function": {
            "name": "about_dataset",
            "description": "Get information about the dataset. It can tell the user the number of data samples in the dataset, the number of features, and the feature names."
        }
    },
    {
        "type": "function",
        "function": {
            "name": "about_dataset_in_depth",
            "description": "Get information about the dataset features in depth. It can tell the user the statistics of the features in the dataset: mean, standard deviation, min, max, etc."
        }
    },
    {
        "type": "function",
        "function": {
            "name": "about_model",
            "description": "Get information about the model. It can tell the user the model type and information about the model architecture."
        }
    },
    {
        "type": "function",
        "function": {
            "name": "about_explainer",
            "description": "Get information about the explainer. It can tell the user more about the SHAP explainer used in the model."
        }
    },
    {
        "type": "function",
        "function": {
            "name": "show_ids",
            "description": "Show the IDs of all data samples in the dataset. Can be used to list IDs of all data samples in the dataset."
        }
    },
    {
        "type": "function",
        "function": {
            "name": "show_one",
            "description": "Show a data sample identified by an ID. Presents the original data points. Can de used to display a sample from the dataset.",
            "parameters": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the single data sample requested"
                    }
                },
                "required": [
                    "id"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "show_group",
            "description": "Show a group of original data points specified by filtering of the dataset. Presents the original data points only. Can de used to display a sub-selection of the dataset.",
            "parameters": {
                "type": "object",
                "properties": {
                    "indoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of indoor temperature"
                    },
                    "indoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "outdoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of outdoor temperature"
                    },
                    "outdoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "past_electricity_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of past electricity"
                    },
                    "past_electricity_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of past electricity"
                    }
                }
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "predict_one",
            "description": "Get a prediction of one data sample identified by an ID. It calls an ML prediction function on given data point to obtain a prediction and return it to the user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the single data sample requested"
                    }
                },
                "required": [
                    "id"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "predict_group",
            "description": "Get a prediction of a group of data points specified by filtering of the dataset. It calls an ML prediction function with given data point to obtain predictions and return them to the user.",
            "parameters": {
                "type": "object",
                "properties": {
                    "indoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of indoor temperature"
                    },
                    "indoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "outdoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of outdoor temperature"
                    },
                    "outdoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "past_electricity_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of past electricity"
                    },
                    "past_electricity_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of past electricity"
                    }
                }
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "predict_new",
            "description": "Get a prediction of a new or hypothetical data sample. It calls the ML prediction function with given feature values to obtain a prediction and return it to the user. The user must provide the values for all features!",
            "parameters": {
                "type": "object",
                "properties": {
                    "indoor_temperature": {
                        "type": "float",
                        "description": "The value of indoor temperature"
                    },
                    "outdoor_temperature": {
                        "type": "float",
                        "description": "The value of outdoor temperature"
                    },
                    "past_electricity": {
                        "type": "float",
                        "description": "The value of past electricity"
                    }
                }
            },
            "required": [
                "indoor_temperature",
                "outdoor_temperature",
                "past_electricity"
            ]
        }
    },
    {
        "type": "function",
        "function": {
            "name": "explain_one",
            "description": "Get an explanation of prediction for one data sample identified by an ID. It calls SHAP module with given data point to determine what features are most important for the prediction, and returns the explanations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the single data sample to be explained"
                    }
                },
                "required": [
                    "id"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "explain_group",
            "description": "Get an explanation of prediction for a group of data instances specified by filtering of the dataset. It calls SHAP module with given data points to determine what features are most important for the prediction, and returns the explanations.",
            "parameters": {
                "type": "object",
                "properties": {
                    "indoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of indoor temperature"
                    },
                    "indoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "outdoor_temperature_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of outdoor temperature"
                    },
                    "outdoor_temperature_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of outdoor temperature"
                    },
                    "past_electricity_min": {
                        "type": "float",
                        "description": "Filter dataset by the minimum value of past electricity"
                    },
                    "past_electricity_max": {
                        "type": "float",
                        "description": "Filter dataset by the maximum value of past electricity"
                    }
                }
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "cfes_one",
            "description": "Get counterfactual explanation examples for one data sample identified by an ID. It calls DICE ML module with given data point to generate counterfactual explanations, and returns how user could manipulate the data for the model to predict a different outcome.",
            "parameters": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the single data sample to generate counterfactual explanations for"
                    }
                },
                "required": [
                    "id"
                ]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "what_if_one",
            "description": "Calculate the effect of changing a feature on the prediction for one data sample identified by an ID. It changes the feature values and calls the ML prediction function to determine the effect of the change on the prediction.",
            "parameters": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The id of the single data sample to calculate the effect of changing a feature for"
                    },
                    "indoor_temperature": {
                        "type": "float",
                        "description": "The new value of indoor temperature"
                    },
                    "outdoor_temperature": {
                        "type": "float",
                        "description": "The new value of outdoor temperature"
                    },
                    "past_electricity": {
                        "type": "float",
                        "description": "The new value of past electricity"
                    }
                },
                "required": [
                    "id"
                ]
            }
        }
    }
]